// Parte I

/* ```ğŸš€ Altere o tipo das variÃ¡veis (var) para let ou const para que respeitem o escopo em que foram declaradas.
ğŸš€ Modifique a variÃ¡vel para que respeite o escopo onde estÃ¡ sendo declarada. ```
 */
/* function imprimeIdade() {
  for (let idade = 30; idade <= 40; idade += 1) {
    console.log('Idade dentro do for:', idade)
  }
}
imprimeIdade() */

// ğŸš€ Altere o valor das propriedades do objeto, para que respeite as caracterÃ­sticas da variÃ¡vel do tipo const;
// Executando esse cÃ³digo iremos receber um erro `TypeError: Assignment to constant variable.`
/*```const pessoa = {
  nome: 'Henri',
  idade: 20
}
pessoa.nome ='Luna';
pessoa.idade = 19
console.log('Nome:', pessoa.nome);
console.log('Idade:', pessoa.idade);```*/

/* ğŸš€ Modifique a variÃ¡vel para que nÃ£o ocorra Erro;
const favoriteFood = 'Lasanha';
favoriteFood = 'Hamburguer';
console.log(favoriteFood);
 */

//ğŸš€ Modifique as concatenaÃ§Ãµes para template literals.
/* 
const name = 'Adriana';
const lastName = 'Soares';
console.log(`OlÃ¡ ${name} ${lastName}!`);
function soma(a,b) {
  let resultado = a + b;
  return resultado;
}
let a = 3;
let b = 5;
console.log(`O resultado da soma de  a + b  Ã©: ${soma(a,b)}`); */
/* 
Modifique a estrutura das funÃ§Ãµes a seguir para que elas sejam arrow functions;

ğŸš€ Transforme a funÃ§Ã£o numeroAleatorio em uma arrow function; */

/* const numeroAleatorio = () => Math.random(); 
console.log(numeroAleatorio());
 */

// ğŸš€ Transforme a funÃ§Ã£o hello em uma arrow function;
/* const hello = nome => `OlÃ¡, ${nome}!`;
let nome = 'Ivan';
console.log(hello(nome)); */

// ğŸš€ Altere a expressÃ£o if/else utilizando ternary operator;

/* let speed = 90;
const speedCar = (speed) => speed >= 120 ? `VocÃª ultrapassou o limite de velocidade` : `VocÃª estÃ¡ na velocidade permitida`;
console.log(speedCar(speed)); */

// Parte II
/* 
Crie uma funÃ§Ã£o que ligue e desligue um motor de um carro.
Crie a funÃ§Ã£o ligarDesligar utilizando arrow functions. 
Crie a lÃ³gica para ligar e desligar o motor;
Imprima no terminal â€œO motor estÃ¡ ligadoâ€œ e â€œO motor estÃ¡ desligadoâ€œ (lembre-se de utilizar o template literals nesse momento).
BÃ´nus (opcional): tente fazer o mesmo exercÃ­cio utilizando ternary operator. */

/* let motorStatus = 'Off';
const turnOnTurnOffCar = () => motorStatus === 'On' ? 'O motor estÃ¡ ligado' : 'O motor estÃ¡ desligado';
console.log(turnOnTurnOffCar()); */
/* 
Crie uma funÃ§Ã£o que calcule a Ã¡rea de um cÃ­rculo.
Na matemÃ¡tica, a fÃ³rmula para calcular a Ã¡rea de um cÃ­rculo Ã©: Ã¡rea = PI vezes o raio elevado ao quadrado.
Com base nessa informaÃ§Ã£o:
Crie a funÃ§Ã£o circleArea, que recebe o valor do raio como parÃ¢metro, utilizando arrow functions;
Crie uma variÃ¡vel para armazenar o valor de PI (lembre-se de armazenar o tipo de variÃ¡vel da forma correta);
Crie a lÃ³gica para retornar a Ã¡rea do cÃ­rculo;
Imprima no terminal â€œEssa Ã© a Ã¡rea do cÃ­rculo: resultado da funÃ§Ã£oâ€œ (lembre-se de utilizar o template literals nesse momento). */

/* const circleArea = raio => {
let valueoPI = 3.14;
  let result = valueoPI * (raio ** 2)
  return `Essa Ã© a Ã¡rea do cÃ­rculo: ${result}` }

console.log(circleArea(5)); */

// ğŸš€ Crie uma funÃ§Ã£o que receba uma frase como parÃ¢metro e retorne a maior palavra da frase.
// longestWord('AntÃ´nio foi no banheiro e nÃ£o sabemos o que aconteceu') // retorna 'aconteceu'
/* 
const longestWord = (phrase) => {
const array = phrase.split(' ');
let maxlength = 0;
let result = '';
for (const index of array){
  if(index.length > maxlength){
    maxlength = index.length
    result = index;
  }
}
return result;
}

console.log(longestWord('AntÃ´nio foi no banheiro e nÃ£o sabemos o que aconteceu')); */

